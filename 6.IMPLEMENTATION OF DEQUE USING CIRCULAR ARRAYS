//IMPLEMENTATION OF DEQUE USING CIRCULAR ARRAYS//

#include<stdio.h>
#include<stdlib.h>

#define N 5
int deque[N];
int front=-1,rear=-1;
void enqueuefront(int x)
{
    if((front==0&&rear==N-1)||(front==rear+1))
    {
        printf("Queue is Full \n");
    } 
    else if(front==-1&&rear==-1)
    {
        front=rear=0;
        deque[front]=x;
    }
    else if(front==0)
    {
        front=N-1;
        deque[front]=x;
    }
    else
    {
        front--;
        deque[front]=x;
    }
 }
 void enqueuerear(int x)
 {
    if((front==0&&rear==N-1)||(front=rear+1))
    {
        printf("Queue is Full \n");
    } 
     else if(front==-1&&rear==-1)
    {
        front=rear=0;
        deque[rear]=x;
    }
    else if(rear==N-1)
    {
        rear=0;
        deque[rear]=x;
    }
    else
    {
        rear++;
        deque[rear]=x;
    }
 }
 void display()
 {
    
        int i=front;
    while(i!=rear)
    {
         printf("%d",deque[i]);
         i=(i+1)%N;
    }
    printf("%d",deque[rear]);
 }
void getfront()
{
    if(front==-1&&rear==-1)
    {
         printf("Queue is Empty\n");
    }
    else
    {
        printf("%d",deque[front]);
    }
}
void getrear()
{
    if(front==-1&&rear==-1)
    {
         printf("Queue is Empty\n");
    }
    else
    {
        printf("%d",deque[rear]);
    }
}
void dequeuefront()
{
    if(front==-1&&rear==-1)
    {
         printf("Queue is Empty\n");
    }
    else if(front==rear)
    {
        printf("The dequeued element is : %d",deque[front]);
        front=rear=-1;
    }
    else if(front==N-1)
    {
         printf("The dequeued element is : %d",deque[front]);
         front=0;
    }
    else{
             printf("The dequeued element is : %d",deque[front]);
             front++;
    }

}
void dequeuerear()
{
    if(front==-1&&rear==-1)
    {
         printf("Queue is Empty\n");
    }
    else if(front==rear)
    {
        front=rear=-1;
    }
    else if (rear==0)
    {
        printf("The dequeued element is : %d",deque[rear]);
        rear=N-1;
    }
    else{
        printf("The dequeued element is : %d",deque[rear]);
        rear--;
    }
}

int main()
{
    
    enqueuerear(16);
    enqueuefront(2);
    enqueuefront(3);
    enqueuerear(19);
    display();
    return 0;
}


